AWSTemplateFormatVersion: 2010-09-09

Parameters:

  VpcId:
    Type: AWS::EC2::VPC::Id

  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>

Resources:

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub "Security group for ${AWS::StackName} machines"
      VpcId: !Ref VpcId

  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        MetadataOptions:
          HttpTokens: required
        UserData:
          Fn::Base64: |-
            Content-Type: multipart/mixed; boundary="==BOUNDARY=="
            MIME-Version: 1.0

            --==BOUNDARY==
            Content-Type: text/cloud-boothook; charset="us-ascii"

            #!/bin/bash
            cloud-init-per instance mkfs_ssd mkfs.ext4 /dev/nvme1n1
            mount /dev/nvme1n1 /var/lib/docker

            --==BOUNDARY==--

  ComputeEnvironment:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      ServiceRole: !GetAtt BatchServiceRole.Arn
      Type: MANAGED
      ComputeResources:
        Type: EC2
        MinvCpus: 0
        MaxvCpus: 64
        InstanceTypes:
          - c7gn.4xlarge
        Subnets: !Ref SubnetIds
        InstanceRole: !Ref InstanceProfile
        SecurityGroupIds:
          - !Ref SecurityGroup
        LaunchTemplate:
          LaunchTemplateId: !Ref LaunchTemplate
          Version: !GetAtt LaunchTemplate.LatestVersionNumber
        Tags:
          Name: !Ref AWS::StackName

  SchedulingPolicy:
    Type: AWS::Batch::SchedulingPolicy

  BatchJobQueue:
    Type: AWS::Batch::JobQueue
    Properties:
      Priority: 1
      ComputeEnvironmentOrder:
        - ComputeEnvironment: !Ref ComputeEnvironment
          Order: 1
      SchedulingPolicyArn: !Ref SchedulingPolicy

  BatchServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Action: sts:AssumeRole
          Principal:
            Service: batch.amazonaws.com
          Effect: Allow
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole

  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Action: sts:AssumeRole
          Principal:
            Service: ec2.amazonaws.com
          Effect: Allow
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref InstanceRole

  JobDefinition:
    Type: AWS::Batch::JobDefinition
    Properties:
      Type: container
      Parameters:
        source_s3_uri: ""
        target_s3_uri: ""
      ContainerProperties:
        Image: amazonlinux:2023
        JobRoleArn: !GetAtt TaskRole.Arn
        ResourceRequirements:
          - Type: VCPU
            Value: "16"
          - Type: MEMORY
            Value: "32768"
        Command:
          - aws
          - s3
          - sync
          - --no-progress
          - --dryrun
          - Ref::source_s3_uri
          - Ref::target_s3_uri
      # TODO timeout?

  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Action: sts:AssumeRole
          Principal:
            Service: ecs-tasks.amazonaws.com
          Effect: Allow
