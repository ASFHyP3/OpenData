AWSTemplateFormatVersion: 2010-09-09

Parameters:

  ImageUri:
    Type: String

  VpcId:
    Type: AWS::EC2::VPC::Id

  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>

Outputs:

  TaskRoleArn:
    Value: !GetAtt TaskRole.Arn

Resources:

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub "Security group for ${AWS::StackName} machines"
      VpcId: !Ref VpcId

  ComputeEnvironment:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      ComputeEnvironmentName: opendata-transfer-compute-environment-4
      ServiceRole: !GetAtt BatchServiceRole.Arn
      Type: MANAGED
      ComputeResources:
        Type: EC2
        MinvCpus: 0
        MaxvCpus: 4000
        InstanceTypes:
          - c7i.4xlarge
        Subnets: !Ref SubnetIds
        InstanceRole: !Ref InstanceProfile
        SecurityGroupIds:
          - !Ref SecurityGroup
        Tags:
          Name: !Ref AWS::StackName

  BatchJobQueue:
    Type: AWS::Batch::JobQueue
    Properties:
      JobQueueName: opendata-transfer-job-queue
      Priority: 1
      ComputeEnvironmentOrder:
        - ComputeEnvironment: !Ref ComputeEnvironment
          Order: 1

  TaskRole:
    Type: 'Custom::JplRole'
    Properties:
      ServiceToken: !ImportValue Custom::JplRole::ServiceToken
      Path: /account-managed/hyp3/
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Action: sts:AssumeRole
          Principal:
            Service: ecs-tasks.amazonaws.com
          Effect: Allow
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
        - !Ref TaskPolicy

  TaskPolicy:
    Type: 'Custom::JplPolicy'
    Properties:
      ServiceToken: !ImportValue Custom::JplPolicy::ServiceToken
      Path: /account-managed/hyp3/
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - s3:PutObject
              - s3:PutObjectTagging
            Resource: "arn:aws:s3:::its-live-open/*"
          - Effect: Allow
            Action: s3:ListBucket
            Resource: "arn:aws:s3:::its-live-open"

  BatchServiceRole:
    Type: 'Custom::JplRole'
    Properties:
      ServiceToken: !ImportValue Custom::JplRole::ServiceToken
      Path: /account-managed/hyp3/
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Action: sts:AssumeRole
          Principal:
            Service: batch.amazonaws.com
          Effect: Allow
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole

  InstanceRole:
    Type: 'Custom::JplRole'
    Properties:
      ServiceToken: !ImportValue Custom::JplRole::ServiceToken
      Path: /account-managed/hyp3/
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Action: sts:AssumeRole
          Principal:
            Service: ec2.amazonaws.com
          Effect: Allow
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /account-managed/hyp3/
      Roles:
        - !Ref InstanceRole

  JobDefinition:
    Type: AWS::Batch::JobDefinition
    Properties:
      JobDefinitionName: opendata-transfer-job-definition
      Type: container
      Parameters:
        src_bucket: ""
        dst_bucket: ""
        s3_prefix: ""
      ContainerProperties:
        Image: !Ref ImageUri
        JobRoleArn: !GetAtt TaskRole.Arn
        ResourceRequirements:
          - Type: VCPU
            Value: "16"
          - Type: MEMORY  # MiB
            Value: "30000"
        Command:
          - Ref::src_bucket
          - Ref::dst_bucket
          - Ref::s3_prefix
      RetryStrategy:
        Attempts: 3

  ECRRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: opendata-transfer
